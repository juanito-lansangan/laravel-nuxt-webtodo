name: Dev Server Deploy

on:
  push:
    branches:
      - development

jobs:
  run-automated-test:
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Compose
        uses: docker/setup-buildx-action@v3

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.18.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      # Copy .env.example to .env file for the container
      - name: Copy .env.example to .env
        run: |
          cp ./src/api/.env.example ./src/api/.env

      # Run Automated Tests for Laravel API (via docker-compose)
      - name: Run Laravel API Tests with Docker Compose
        run: |
          # Set up Docker Compose with necessary volumes
          docker-compose up -d db api
          
          # Wait for the DB container to be fully ready (optional)
          # Adjust if needed based on your DB initialization times
          sleep 20

          # Install Composer dependencies inside the API container
          # docker-compose exec api composer install --no-interaction --prefer-dist

          # Run the Laravel tests within the API container
          docker-compose exec api php artisan test

          # Tear down the containers
          docker-compose down
          
  build-and-push:
    needs: [run-automated-test]
    runs-on: ubuntu-latest
    environment: DEV_SERVER

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Compose
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build and push api to Docker Hub (after tests passed)
      - name: Build and push api
        uses: docker/build-push-action@v5
        with:
          push: true
          context: .
          file: ./docker/api/php.dockerfile
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/laravel-nuxt-webtodo-api:latest

      # Build and push webserver
      - name: Build and push webserver
        uses: docker/build-push-action@v5
        with:
          push: true
          context: .
          file: ./docker/webserver/webserver.dockerfile
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/laravel-nuxt-webtodo-server:latest

      # Build and push app
      - name: Build and push app
        uses: docker/build-push-action@v5
        with:
          push: true
          context: .
          file: ./docker/frontend/frontend.dockerfile
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/laravel-nuxt-webtodo-app:latest
          build-args: |
            NUXT_TOKEN_STORAGE_PROVIDER=${{ secrets.NUXT_TOKEN_STORAGE_PROVIDER }}
            NUXT_SANCTUM_API_URL=${{ secrets.NUXT_SANCTUM_API_URL }}
            NUXT_AUTH_MODE=${{ secrets.NUXT_AUTH_MODE }}

  deploy:
    needs: [build-and-push]
    runs-on: ubuntu-latest
    environment: DEV_SERVER

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Copy Docker Compose & Script to Server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: 'docker-compose.deploy.yml,deploy.sh'
          target: '/root/webapps/laravel-nuxt-webtodo'

      - name: SSH and Deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: sh /root/webapps/laravel-nuxt-webtodo/deploy.sh